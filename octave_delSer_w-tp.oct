#!/bin/env octave -qf

function [spearmanOrder] = spearmanOrdering(vec)
	testVec=vec;
	testVec(end+1)=99999999999999;
	[junk,tempOrdering] = sort(testVec);
	newOrdering=zeros(length(testVec),1);
	countRun=1;
	for i=2:length(testVec)
		if (testVec(tempOrdering(i))==testVec(tempOrdering(i-1)))
			countRun+=1;
		else
			for j=1:countRun
				newOrdering(tempOrdering(i-j))=(i-countRun+i-1)/2;
			endfor
			countRun=1;
		endif
	endfor
	spearmanOrder=newOrdering(1:length(vec));
endfunction

function [masterMedMat] = neutProfile(neutMatrix,abClasses,mabNames)
	for i=1:columns(neutMatrix)
		abData(:,i)=spearmanOrdering(neutMatrix(:,i));
	endfor
	for class=1:length(abClasses)
		curClassAbPos=[];
		curClassAbData=[];
		for j=1:length(abClasses{class})
			curClassAbPos(j)=strmatch(abClasses{class}{j},mabNames,"exact");
		endfor
		curClassAbData=abData(:,curClassAbPos);
		if (columns(curClassAbData)>1)
			masterMedMat(class,:)=median(curClassAbData');
		else
			masterMedMat(class,:)=curClassAbData;
		endif
	endfor
endfunction

function [signal] = seralogic(profileMatrix,sera)
	#sera is characterized by high magnitude indicating high signal
	R=profileMatrix';
	seraRank=spearmanOrdering(-sera);
	H=2*R'*R;
	q=-2*R'*seraRank;
	signal = qp([],H,q,ones(1,rows(profileMatrix)),[1],zeros(rows(profileMatrix),1),999999*ones(rows(profileMatrix),1));
endfunction


neutMatrix=load("./mab_neut_data.in");
vStrains=textread('./mab_neut_vStrains.in','%s');
mabNames=textread('./mab_neut_mabNames.in','%s');

abClasses={{"1F4", "4L5"}, {"2dd22", "3F9"}, {"5J7"}, {"ab126", "ab131"}, {"C10"}, {"1C19", "1M7", "1N5", "1C18", "1L6", "1N8", "3B4", "4ee8"}, {"2M2"}};

#loads data generated by genSera.oct
seraMat=load(["./sera_neut_fortestdata.in"]);
classWeights=load(["./sera_classWeights_fortestdata.in"]);

numSera=columns(seraMat)
numClasses=length(abClasses)

#load the subset file
selSubsets=load(["./sel_subsets_pos.in"]);
numSubsets=length(selSubsets);

numVStrains=rows(vStrains);
numMabs=columns(mabNames);


fid=fopen(["./virusSelSubsetsSerDel_fortestdata.out"],"w")

for i=1:numSubsets
	
	testInd=selSubsets(i,:);
	testProfile=neutProfile(neutMatrix(testInd,:),abClasses,mabNames);
	for j=1:numSera
		testSeralogic(j,:)=seralogic(testProfile,seraMat(testInd,j))';
	endfor
	
	nfpF = ["nfp_out/nfp_ser-del_" num2str(i) ".out"];
	save("-text", nfpF, "testSeralogic");
	
	
	#compute TP and FP
	posCutoff = 0.25;
	for j=1:numSera
		tp(j) = 0; 
		fp(j)=0;
		for k=1:numClasses
			if (classWeights(j,k)>=posCutoff && testSeralogic(j,k)>=posCutoff)
				tp(j)++;
			elseif (testSeralogic(j,k)>=posCutoff)
				fp(j)++;
			endif
		endfor
	endfor
	
	#errors with respect to "true signal"	
    error=testSeralogic-classWeights;
	errorMax=max(abs(error)')';
	errorRMSD=(sum(error'.^2)'./numClasses).**.5; #you can expect the max error to be about 2 * errorRMSD

	rmsdRmsd=(errorRMSD'*errorRMSD./numSera)**.5;	
	avgRmsd=mean(errorRMSD);
	stdRmsd=std(errorRMSD);
	rmsdMax=(errorMax'*errorMax./numSera)**.5;
	avgMax=mean(errorMax);
	stdMax=std(errorMax);
	
	#writes down the summary information in the file
	fputs(fid,[num2str(rmsdRmsd)," ",num2str(avgRmsd)," ",num2str(stdRmsd)," ",num2str(rmsdMax)," ",num2str(avgMax)," ",num2str(stdMax)," ",num2str(mean(tp))," ",num2str(tp)," ",num2str(mean(fp))," ",num2str(fp)," "]);
	

	#write the virus names onto the line in the open file
	strains=vStrains(testInd);
	fputs(fid,["{",strains{1}]);
	for k=2:length(strains)
		fputs(fid,[",",strains{k}]);
	endfor

	fputs(fid,"}\n");
	if mod(i,100)==0
		i
	endif
endfor

